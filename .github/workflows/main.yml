# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AWS_REGION: eu-west-2                   # set this to your preferred AWS region, e.g. us-west-1
  # containerDefinitions section of your task definition

jobs:
  # This job creates a mysql database for testing
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install ependencies
        run: |
          python -m pip install --upgrade pip
          export VIRTUAL_ENV=/opt/venv
          python -m venv $VIRTUAL_ENV --prompt elect
          source /opt/venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install gitpython
          pip install .
          pip install tox
      - name: Run unit tests with tox
        run: |
          source /opt/venv/bin/activate
          export FLASK_ENV=testing
          export API_KEY=eiWee8ep9due4deeshoa8Peichai8Eih
          export CI_PLATFORM=GITHUB
          tox

  # This workflow installs the project on an ec2 instance using docker
  build:
    name: Push to EC2 instance
    env:
      FLASK_APP: ${{ secrets.FLASK_APP }}
      FLASK_ENV: ${{ secrets.FLASK_ENV }}
      FLASK_RUN_PORT: ${{ secrets.FLASK_RUN_PORT }}
      FLASK: ${{ secrets.FLASK }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
      EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
      API_KEY: ${{ secrets.API_KEY }}
    runs-on: ubuntu-latest
    environment: development
    needs: [ ci ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create env file
        run: python create-envfile.py

      - name: Copy the repository to EC2 instance
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: "../mok"
          REMOTE_HOST: ${{ secrets.DOMAIN_NAME }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.TARGET }}

      - name: executing remote deployment using the key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DOMAIN_NAME }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /data/mok && make dc-stop && make dc-start && make dc-prune